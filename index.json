[
  {
    "categories": null,
    "contents": "This talk looked at Liberty Mutual’s transformation to Continuous Integration, Continuous Delivery, and DevOps. For a large, heavily regulated industry, this task can not only be daunting, but viewed by many as impossible. Often, organizations try to reduce the friction through micro-fixes, but Eddie’s team asked how to change the culture to reduce the friction and concluded with the following final points:\n Don’t mandate DevOps. Give employees the chance to master their discipline with examples to set and follow. Favor deep end-to-end accomplishments over broad but incremental steps forward. Focus on taking the right teams far before encouraging broad adoption. Centralize the platforms and tools that your teams shouldn’t be thinking about. Provide foundational services/commodities and let teams stay on purpose. Incorporate contributions from everyone; don’t stifle autonomy. Stay open to new ways of working. Challenge security policies, but respect intentions. Find new ways to enforce concerns without abandoning precaution.    ",
    "permalink": "https://rajamm.info/publications/alldaydevops/",
    "tags": [
      "DevOps",
      "Continuous Integration",
      "Continuous Delivery",
      "CI/CD pipelines",
      "agile",
      "Culture"
    ],
    "title": "Organically DevOps: Building Quality and Security into the Software Supply Chain at Liberty Mutual"
  },
  {
    "categories": null,
    "contents": "Simple Angular Integration with Bootstrap 4. Integrated Common Header, Sidebar and Footer components. Also with one login page. This is under development. The plan is to integrate Instagram API for learning purpose..\n",
    "permalink": "https://rajamm.info/projects/contributions/shields-docker/",
    "tags": [
      "Angular 6",
      "TypeScript",
      "Bootstrap 4",
      "HTML",
      "CSS"
    ],
    "title": "angular6-bootstrap"
  },
  {
    "categories": null,
    "contents": "Angular 6 Simple Observable example\nIt is a simple Example for how Angular Observable works.\nYou can get working example with this URL.\nGithub: https://github.com/mmraja83/ng6-observable-example\nPlease provide comments on this.\n",
    "permalink": "https://rajamm.info/projects/contributions/schema-org/",
    "tags": [
      "Angular 6",
      "TypeScript"
    ],
    "title": "ng6-observable-example"
  },
  {
    "categories": null,
    "contents": "",
    "permalink": "https://rajamm.info/projects/creations/bosh-agents/",
    "tags": null,
    "title": ""
  },
  {
    "categories": null,
    "contents": "",
    "permalink": "https://rajamm.info/projects/creations/docker-marketplace/",
    "tags": null,
    "title": ""
  },
  {
    "categories": null,
    "contents": "",
    "permalink": "https://rajamm.info/projects/creations/marketplace/",
    "tags": null,
    "title": ""
  },
  {
    "categories": null,
    "contents": " This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026quot;HTML\u0026quot;, \u0026quot;JSON\u0026quot;]  Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026quot;contents\u0026quot;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026quot;tags\u0026quot;:{{ .Params.tags | jsonify }}{{end}}, \u0026quot;categories\u0026quot; : {{ .Params.categories | jsonify }}, ...  Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026quot;title\u0026quot;, \u0026quot;contents\u0026quot;, \u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot; ]  ",
    "permalink": "https://rajamm.info/search/",
    "tags": null,
    "title": "Search Results"
  },
  {
    "categories": null,
    "contents": "Tank Auth is an authentication library for PHP-framework CodeIgniter. It\u0026rsquo;s based on DX Auth, althouth the code was seriously reworked. I have added few fixes to support Codeigniter 3.x.x.\n",
    "permalink": "https://rajamm.info/projects/contributions/deploy-triggers/",
    "tags": [
      "CodeIgniter",
      "PHP"
    ],
    "title": "codeigniter3-tankauth"
  }
]